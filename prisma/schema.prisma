generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // agora vem da vari√°vel de ambiente
}

model User {
  id                String             @id @default(cuid())
  name              String
  phone             String             @unique
  password          String
  role              Role               @default(USER)
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  wallet            Wallet?
  investments       Investment[]
  withdrawalRequests WithdrawalRequest[]
  sessions          Session[]
}

model Wallet {
  id                String   @id @default(cuid())
  userId            String   @unique
  balance           Float    @default(0)
  withdrawalBalance Float    @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Investment {
  id          String   @id @default(cuid())
  userId      String
  packageId   String
  amount      Float
  dailyReturn Float
  duration    Int
  status      InvestmentStatus @default(ACTIVE)
  startDate   DateTime @default(now())
  endDate     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WithdrawalRequest {
  id        String   @id @default(cuid())
  userId    String
  amount    Float
  iban      String
  status    WithdrawalStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

enum InvestmentStatus {
  ACTIVE
  COMPLETED
  CANCELLED
}

enum WithdrawalStatus {
  PENDING
  APPROVED
  REJECTED
}
